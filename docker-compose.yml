version: '3.8'

services:
  # Tax Extractor API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: tax-extractor-api
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TAX_EXTRACTOR_HEADLESS=true
      - LOG_LEVEL=info
    volumes:
      - ./output:/app/output
      - ./logs:/app/logs
      - ./extracting-tests-818:/app/extracting-tests-818
    depends_on:
      - redis
    networks:
      - tax-extractor-network
    restart: unless-stopped

  # Redis for job queue and caching
  redis:
    image: redis:7-alpine
    container_name: tax-extractor-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - tax-extractor-network
    restart: unless-stopped

  # Optional: PostgreSQL for persistent storage
  postgres:
    image: postgres:15-alpine
    container_name: tax-extractor-db
    environment:
      - POSTGRES_USER=taxextractor
      - POSTGRES_PASSWORD=secure_password_here
      - POSTGRES_DB=taxextractor
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - tax-extractor-network
    restart: unless-stopped
    profiles:
      - with-database

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: tax-extractor-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - tax-extractor-network
    restart: unless-stopped
    profiles:
      - production

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: tax-extractor-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - tax-extractor-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: tax-extractor-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - tax-extractor-network
    restart: unless-stopped
    profiles:
      - monitoring

networks:
  tax-extractor-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
  prometheus-data:
  grafana-data: